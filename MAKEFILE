#################################################################################
#
# Makefile to build the project
#
#################################################################################

PROJECT_NAME = de-alapin-totesys
REGION = eu-west-2
PYTHON_INTERPRETER = python
WD=$(shell pwd)
PYTHONPATH=${WD}	
SHELL := /usr/bin/bash
PROFILE = default
PIP:=pip

## Create python interpreter environment.
create-environment:
	@echo ">>> About to create environment: $(PROJECT_NAME)..."
	@echo ">>> check python3 version"
	( \
		$(PYTHON_INTERPRETER) --version; \
	)
	@echo ">>> Setting up VirtualEnv."
	( \
	    $(PIP) install -q virtualenv virtualenvwrapper; \
	    virtualenv venv --python=$(PYTHON_INTERPRETER); \
	)

# Define utility variable to help calling Python from the virtual environment
ACTIVATE_ENV := source ./venv/bin/activate

# Execute python related functionalities from within the project's environment
define execute_in_env
	$(ACTIVATE_ENV) && $1
endef

## Build the environment requirements
requirements: create-environment
	$(call execute_in_env, $(PIP) install -r ./requirements.txt)
	$(call execute_in_env, $(PIP) install -r ./requirements.txt -t dependencies/python)

################################################################################################################
# Set Up

## Install bandit
bandit:
    $(call execute_in_env, $(PIP) install bandit)
## Install safety
safety:
    $(call execute_in_env, $(PIP) install safety)
## Install black
black:
    $(call execute_in_env, $(PIP) install black==22.12.0)
## Install coverage
coverage:
    $(call execute_in_env, $(PIP) install coverage)
flake8:
    $(call execute_in_env, $(PIP) install flake8)

## Set up dev requirements (bandit, safety, flake8)
dev-setup: bandit safety black coverage flake8

# Build / Run

## Run the security test (bandit + safety)
security-test:
    $(call execute_in_env, safety check -r ./requirements.txt)
    $(call execute_in_env, bandit -lll */*.py *c/*.py)
## Run the black code check
run-black:
    $(call execute_in_env, black src test)
## Run the unit tests
unit-test:
    $(call execute_in_env, PYTHONPATH=${PYTHONPATH} pytest -vvv --testdox)
## Run the coverage check
check-coverage:
    $(call execute_in_env, PYTHONPATH=${PYTHONPATH} coverage run --omit 'venv/*' -m pytest && coverage report -m)
## Run flake8
run-flake8: dev-setup
    $(call execute_in_env, flake8  ./src/*.py ./test/*.py)
## Run all checks
run-checks: security-test run-black unit-test check-coverage run-flake8


# Notebook
## Run jupyter
# notebook:
# 	$(call execute_in_env, PYTHONPATH=${PYTHONPATH} jupyter lab)

